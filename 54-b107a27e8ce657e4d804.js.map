{"version":3,"sources":["webpack:///../packages/console-gauge-chart/es/index.js","webpack:///./node_modules/@alicloud/gatsby-theme-console-doc/lib/buildtime/.cache/a72aab9288572d414672cb0a666ab156---chart）packages）console-gauge-chart）demo）Basic.tsx"],"names":["G2","Shape","registerShape","drawShape","cfg","group","center","this","parsePoint","x","y","addShape","attrs","x1","y1","x2","y2","stroke","color","lineWidth","lineCap","r","fill","getUnifiedProps","props","config","defaultConfig","getConsoleConfig","newConfig","Utils","merge","Object","assign","padding","drawChart","chart","data","res","value","Array","isArray","length","source","coord","startAngle","Math","PI","endAngle","radius","scale","min","max","tickInterval","nice","axis","zIndex","line","label","offset","textStyle","fontSize","textAlign","textBaseline","subTickCount","subTickLine","strokeOpacity","tickLine","grid","legend","point","position","shape","active","guide","arc","top","start","end","style","html","render","ConsoleGagueChart","g2Factory","name","height"],"mappings":"sJAEYA,IAAGC,MAETC,cAAc,QAAS,UAAW,CACpCC,UAAW,SAAUC,EAAKC,GACtB,IAAIC,EAASC,KAAKC,WAAW,CACzBC,EAAG,EACHC,EAAG,IAcP,OAXAL,EAAMM,SAAS,OAAQ,CACnBC,MAAO,CACHC,GAAIP,EAAOG,EACXK,GAAIR,EAAOI,EACXK,GAAIX,EAAIK,EACRO,GAAIZ,EAAIM,EACRO,OAAQb,EAAIc,MACZC,UAAW,EACXC,QAAS,WAGVf,EAAMM,SAAS,SAAU,CAC5BC,MAAO,CACHH,EAAGH,EAAOG,EACVC,EAAGJ,EAAOI,EACVW,EAAG,KACHJ,OAAQb,EAAIc,MACZC,UAAW,IACXG,KAAM,aAMtB,IACIlB,EAAM,CAENmB,gBAAiB,SAAUC,GACvB,IAAIC,EAASD,EAAMC,OACfC,EAAgBC,cAAgB,kBAChCC,EAAYC,IAAMC,MAAM,GAAIJ,EAAeD,GAE/C,OAAOM,OAAOC,OAAO,GAAIR,EAAO,CAC5BS,QAAST,EAAMS,SAAWL,EAAUK,SAAW,OAC/CR,OAAQG,KAGhBM,UAAW,SAAUC,EAAOV,EAAQW,GAChC,IAAIC,EAAM,CAAC,CAAEC,MAAO,IAChBC,MAAMC,QAAQJ,IAASA,EAAKK,SAC5BJ,EAAMD,EAAK,GAAGA,MAElBD,EAAMO,OAAOL,GACbF,EAAMQ,MAAM,QAAS,CACjBC,YAAa,EAAI,EAAIC,KAAKC,GAC1BC,SAAU,EAAI,EAAIF,KAAKC,GACvBE,OAAQ,MAEZb,EAAMc,MAAM,QAAS,CACjBC,IAAK,EACLC,IAAK,EACLC,aAAc,EACdC,MAAM,IAEVlB,EAAMmB,KAAK,KAAK,GAChBnB,EAAMmB,KAAK,QAAS,CAChBC,OAAQ,EACRC,KAAM,KACNC,MAAO,CACHC,QAAS,GACTC,UAAW,CACPC,SAAU,GACVC,UAAW,SACXC,aAAc,WAGtBC,aAAc,EACdC,YAAa,CACTvB,QAAS,EACTxB,OAAQ,OACRgD,cAAe,GAEnBC,SAAU,CACNzB,QAAS,GACTxB,OAAQ,OACRgD,cAAe,GAEnBE,KAAM,OAEVhC,EAAMiC,QAAO,GACbjC,EAAMkC,QAAQC,SAAS,WAClBC,MAAM,WACNrD,MAAM,WACNsD,QAAO,GAEZrC,EAAMsC,QAAQC,IAAI,CACdnB,OAAQ,EACRoB,KAAK,EACLC,MAAO,CAAC,EAAG,MACXC,IAAK,CAAC,EAAG,MACTC,MAAO,CACH7D,OAAQ,UACRE,UAAW,MAInBgB,EAAMsC,QAAQC,IAAI,CACdnB,OAAQ,EACRqB,MAAO,CAAC,EAAG,MACXC,IAAK,CAACxC,EAAI,GAAGC,MAAO,MACpBwC,MAAO,CACH7D,OAAQ,UACRE,UAAW,MAInBgB,EAAMsC,QAAQM,KAAK,CACfT,SAAU,CAAC,MAAO,OAClBS,KAAM,mKAEyE,GAAf1C,EAAI,GAAGC,MAAa,gBAGxFH,EAAM6C,WAKCC,EAFSC,YA5FH,oBA4F6B9E,GC5H5CgC,EAAO,CACX,CACE+C,KAAM,MACN/C,KAAM,CACJ,CAAEE,MAAO,QAKTb,EAAS,GAEA,4BACb,kBAAC,EAAD,CAAmBW,KAAMA,EAAMX,OAAQA,EAAQ2D,OAAQ","file":"54-b107a27e8ce657e4d804.js","sourcesContent":["import { G2, g2Factory, getConsoleConfig, Utils } from '@alicloud/console-shared-utils';\n\nvar Shape = G2.Shape;\r\n// 自定义Shape 部分\r\nShape.registerShape('point', 'pointer', {\r\n    drawShape: function (cfg, group) {\r\n        var center = this.parsePoint({\r\n            x: 0,\r\n            y: 0\r\n        });\r\n        // 绘制指针\r\n        group.addShape('line', {\r\n            attrs: {\r\n                x1: center.x,\r\n                y1: center.y,\r\n                x2: cfg.x,\r\n                y2: cfg.y,\r\n                stroke: cfg.color,\r\n                lineWidth: 5,\r\n                lineCap: 'round'\r\n            }\r\n        });\r\n        return group.addShape('circle', {\r\n            attrs: {\r\n                x: center.x,\r\n                y: center.y,\r\n                r: 9.75,\r\n                stroke: cfg.color,\r\n                lineWidth: 4.5,\r\n                fill: '#fff'\r\n            }\r\n        });\r\n    }\r\n});\n\nvar COMPONENT_NAME = 'ConsoleGagueChart';\r\nvar cfg = {\r\n    // 初始化前对props的预处理函数\r\n    getUnifiedProps: function (props) {\r\n        var config = props.config;\r\n        var defaultConfig = getConsoleConfig()[COMPONENT_NAME];\r\n        var newConfig = Utils.merge({}, defaultConfig, config);\r\n        // TODO 处理padding\r\n        return Object.assign({}, props, {\r\n            padding: props.padding || newConfig.padding || 'auto',\r\n            config: newConfig,\r\n        });\r\n    },\r\n    drawChart: function (chart, config, data) {\r\n        var res = [{ value: 0 }];\r\n        if (Array.isArray(data) && data.length) {\r\n            res = data[0].data;\r\n        }\r\n        chart.source(res);\r\n        chart.coord('polar', {\r\n            startAngle: -9 / 8 * Math.PI,\r\n            endAngle: 1 / 8 * Math.PI,\r\n            radius: 0.75\r\n        });\r\n        chart.scale('value', {\r\n            min: 0,\r\n            max: 9,\r\n            tickInterval: 1,\r\n            nice: false\r\n        });\r\n        chart.axis('1', false);\r\n        chart.axis('value', {\r\n            zIndex: 2,\r\n            line: null,\r\n            label: {\r\n                offset: -16,\r\n                textStyle: {\r\n                    fontSize: 18,\r\n                    textAlign: 'center',\r\n                    textBaseline: 'middle'\r\n                }\r\n            },\r\n            subTickCount: 4,\r\n            subTickLine: {\r\n                length: -8,\r\n                stroke: '#fff',\r\n                strokeOpacity: 1\r\n            },\r\n            tickLine: {\r\n                length: -17,\r\n                stroke: '#fff',\r\n                strokeOpacity: 1\r\n            },\r\n            grid: null\r\n        });\r\n        chart.legend(false);\r\n        chart.point().position('value*1')\r\n            .shape('pointer')\r\n            .color('#1890FF')\r\n            .active(false);\r\n        // 绘制仪表盘背景\r\n        chart.guide().arc({\r\n            zIndex: 0,\r\n            top: false,\r\n            start: [0, 0.945],\r\n            end: [9, 0.945],\r\n            style: {\r\n                stroke: '#CBCBCB',\r\n                lineWidth: 18\r\n            }\r\n        });\r\n        // 绘制指标\r\n        chart.guide().arc({\r\n            zIndex: 1,\r\n            start: [0, 0.945],\r\n            end: [res[0].value, 0.945],\r\n            style: {\r\n                stroke: '#1890FF',\r\n                lineWidth: 18\r\n            }\r\n        });\r\n        // 绘制指标数字\r\n        chart.guide().html({\r\n            position: ['50%', '95%'],\r\n            html: '<div style=\"width: 300px;text-align: center;\">'\r\n                + '<p style=\"font-size: 20px; color: #545454;margin: 0;\">合格率</p>'\r\n                + '<p style=\"font-size: 36px;color: #545454;margin: 0;\">' + res[0].value * 10 + '%</p>'\r\n                + '</div>'\r\n        });\r\n        chart.render();\r\n    },\r\n};\r\nvar ConsoleGagueChart = g2Factory(COMPONENT_NAME, cfg);\n\nexport default ConsoleGagueChart;\n","import React from 'react';\nimport ConsoleGagueChart from '@alicloud/console-gauge-chart';\n\nconst data = [\n  {\n    name: 'oss',\n    data: [\n      { value: 5.6 },\n    ],\n  }\n];\n\nconst config = {};\n\nexport default () => (\n  <ConsoleGagueChart data={data} config={config} height={300} />\n);\n"],"sourceRoot":""}